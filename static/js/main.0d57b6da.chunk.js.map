{"version":3,"sources":["reducers/measurements.js","actions/measurements.js","reducers/index.js","config/store.js","components/MeasurementsTable/index.js","api/measurements.js","components/App/index.js","index.js"],"names":["DEFAULT_STATE","uniqId","convertDataItemToStateMeasurements","item","measurements","map","el","date","Date","details","JSON","stringify","type","name","unit","id","items","list","state","arguments","length","undefined","action","console","log","Object","toConsumableArray","payload","reduce","acc","concat","slice","reducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","apply","MeasurementsTable","handleNewMeasurements","data","_this","props","addMeasurements","this","stopMeasurementsListen","targetUrl","cb","xhttp","prevData","timer","reStartClient","abort","XMLHttpRequest","onreadystatechange","updates","responseText","substr","trim","parse","open","send","setInterval","clearInterval","createMeasurementsClient","react_default","a","createElement","className","key","toLocaleTimeString","React","Component","connect","_ref","App","components_MeasurementsTable","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.0d57b6da.chunk.js","sourcesContent":["import * as actions from '../actions/measurements';\n\nconst DEFAULT_STATE = [];\nconst MAX_MEASUREMENTS = 20;\n\nlet uniqId = 0;\n\nconst convertDataItemToStateMeasurements = item =>\n  item.measurements.map(el => ({\n    date: new Date(el[0] * 1000),\n    details: JSON.stringify(el[1]),\n    type: item.name,\n    unit: item.unit || '',\n    id: uniqId++,\n  }));\n\nconst convertDataToStateMeasurements = list =>\n  list\n    .map(convertDataItemToStateMeasurements)\n    .reduce((acc, el) => [...acc, ...el], []);\n\nconst items = (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case actions.ADD_MEASUREMENT: {\n      console.log(action);\n      return [\n        ...convertDataToStateMeasurements(action.payload),\n        ...state,\n      ].slice(0, MAX_MEASUREMENTS);\n    }\n    default:\n      return state;\n  }\n};\n\nexport default items;\n","export const ADD_MEASUREMENT = 'ADD_MEASUREMENT';\n\nexport const addMeasurements = measurements => ({\n  type: ADD_MEASUREMENT,\n  payload: measurements,\n});\n","import { combineReducers } from 'redux';\nimport measurements from './measurements';\n\nconst reducer = combineReducers({\n  measurements,\n});\n\nexport default reducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducers from '../reducers';\n\nconst middlewares = [];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(...middlewares)),\n);\n\nexport default store;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { createMeasurementsClient } from '../../api/measurements';\nimport { addMeasurements } from '../../actions/measurements';\n\nimport './style.css';\n\nclass MeasurementsTable extends React.Component {\n  componentDidMount() {\n    this.stopMeasurementsListen = createMeasurementsClient(\n      'https://jsdemo.envdev.io/sse',\n      this.handleNewMeasurements,\n    );\n  }\n\n  handleNewMeasurements = data => {\n    console.log('handleNewMeasurements', data);\n    this.props.addMeasurements(data);\n  };\n\n  render() {\n    return (\n      <div className=\"measurements-table\">\n        <table className=\"measurements-table__table\">\n          <caption className=\"measurements-table__caption\">\n            Measurements Table\n          </caption>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Type</th>\n              <th>Unit</th>\n              <th>Details</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.measurements.map(el => (\n              <tr key={el.id}>\n                <td>{el.date.toLocaleTimeString()}</td>\n                <td>{el.type}</td>\n                <td>\n                  <code>{el.unit}</code>\n                </td>\n                <td>\n                  <pre>\n                    <code>{el.details}</code>\n                  </pre>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    console.log('xxx');\n  }\n}\n\nexport default connect(\n  ({ measurements }) => ({ measurements }),\n  { addMeasurements },\n)(MeasurementsTable);\n","const RESEND_REQUEST_TIMEOUT = 60 * 1000;\n\nconst DATA_PREFIX = 'data:';\n\nexport const createMeasurementsClient = (targetUrl, cb) => {\n  let xhttp;\n  let prevData;\n  let timer;\n  const reStartClient = () => {\n    prevData = '';\n    if (xhttp) {\n      xhttp.abort();\n    }\n    xhttp = new XMLHttpRequest();\n\n    xhttp.onreadystatechange = function() {\n      const updates = this.responseText\n        .substr(prevData.length)\n        .substr(DATA_PREFIX.length)\n        .trim();\n      prevData = this.responseText;\n      if (updates) {\n        const data = JSON.parse(updates);\n        cb(data);\n      }\n    };\n\n    xhttp.open('GET', targetUrl, true);\n    xhttp.send();\n  };\n\n  timer = setInterval(reStartClient, RESEND_REQUEST_TIMEOUT);\n\n  reStartClient();\n\n  return () => {\n    if (xhttp) {\n      xhttp.abort();\n    }\n    clearInterval(timer);\n  };\n};\n","import React, { Component } from 'react';\nimport './style.css';\n\nimport MeasurementsTable from '../MeasurementsTable';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MeasurementsTable />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './config/store';\nimport App from './components/App';\n\nimport './index.css';\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}